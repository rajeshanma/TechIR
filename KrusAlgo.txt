package com.algo;
import java.util.*;


//work in progress


public class kruskal {
	static int arr[][]=new int[4][4];
	static int a[]=new int[16];
	static int b[]=new int[4];
	static int small;
	public static void main(String[] args)
	{
		values();
		compareWeight();
		//swap();
		access();
		mapping();
		
	}
	static void values()
	{
		arr[0][0]=0;
		arr[0][1]=10;
		arr[0][2]=30;
		arr[0][3]=0;
		
		arr[1][0]=10;
		arr[1][1]=0;
		arr[1][2]=20;
		arr[1][3]=60;
		
		arr[2][0]=30;	
		arr[2][1]=20;
		arr[2][2]=0;
		arr[2][3]=0;																		
				
		arr[3][0]=0;
		arr[3][1]=60;
		arr[3][2]=0;
		arr[3][3]=0;
				
	}
	static int count =0;
	static void compareWeight()
	{	int r=0;
		for(int i=0;i<arr.length;i++)
		{
			for(int j=i;j<arr.length;j++)
			{
				if(arr[i][j]!=0)
				{	
					 System.out.println("the distance bw      "+i+"  to    "+j+   "= "+arr[i][j]);
					 a[count++]=i;
					 a[count++]=j;
					 a[count++]=arr[i][j];
					 b[r++]=arr[i][j];
				}
				
			}
		}
		
	}
	static void swap()
	{
		int temp;
		
		System.out.println(Arrays.toString(a));
		small=a[2];
		for(int i=5;i<a.length;i=+3)
		{
			
			if(a[i]!=0){
				
				if(small>a[i])
				{
					small=a[i];
					System.out.println(small);
				}
			}
			//System.out.println(small);
			
		}
		System.out.println(small);
	}
public static void access(){
	System.out.println(Arrays.toString(b));
	Arrays.sort(b);
	System.out.println(Arrays.toString(b));
	
}
public  static void mapping(){
	System.out.println(Arrays.toString(b));
	int in=0;
	int check[]=new int[4];
	for(int k=0;k<b.length;k++){
	for(int i=0;i<arr.length;i++)
		{
		for(int j=i;j<arr.length;j++)
		{
			if(b[k]==arr[i][j])
			{
				check[in]=i;
				in++;
				System.out.println("the flow is "+i+"  to  "+j);
			}
		}
		}
}
}
}